
package swing;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Khairul Hakimi
 */
public class UpdateCurrency extends javax.swing.JFrame {

    /**
     * Creates new form UpdateCurrency
     */
    public UpdateCurrency() throws IOException {
        initComponents();
        jTextField_NewRate.setText("");
        ListCurrency();  
        fillComboBox();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    //to get the name of the currency and put in the combo box
    public void fillComboBox(){
        File file = new File("Currency.txt");
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                String line = lines[i].toString();
                String[] rowData = line.split(",:"); 
                jComboBox_CurrencyName.addItem(rowData[1]);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UpdateCurrency.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    public void ListCurrency() throws FileNotFoundException, IOException{
        String[] columnName = new String[4];// declare the column's name and assign size
        columnName[0] = "ID";//first column is for Currency ID
        columnName[1] = "Name";//second column is for Name
        columnName[2] = "Symbol/unit";//third column is for symbol or unit
        columnName[3] = "Rate";//fouth column is for rate
       
        File file = new File("Currency.txt");//Open Currency.txt file text
        BufferedReader br = new BufferedReader(new FileReader(file));//to read the Currency.txt file
        
        DefaultTableModel model = (DefaultTableModel) jTable_Currency.getModel();// to add data on the table
        model.setColumnIdentifiers(columnName);
        jTable_Currency.setRowHeight(30);
      
        Object[] tableLines = br.lines().toArray();//gain data from the lines that has been in the file
        int i;//initiate i to 0

        for(i=0; i<tableLines.length;i++){
            String line = tableLines[i].toString().trim();//to eliminated leading and trailing spaces from both ends of the strings
            String[] tableRow = line.split(",:");//Split the data by including ,:
                model.addRow(tableRow);
        }
    }
    
    public void updateCurrency() throws IOException{
        File file = new File("Currency.txt");// it will open  the Currency.txt file
        BufferedReader br;
        String currencyName = jComboBox_CurrencyName.getSelectedItem().toString();//get the Currency from the text field
        
        try{
            br = new BufferedReader(new FileReader(file));//to read the Currency file
             
                Object[] tableLines = br.lines().toArray();//gain data from the lines that has been in the file
                int i;// declare i
                               
                try (BufferedWriter bwp = new BufferedWriter(new FileWriter(file)); //it will write text  to character output stream
                        PrintWriter pwp = new PrintWriter(bwp)) {//format the content to be appended in the file                   // System.out.println("Out of first loop");
                    for(i=0; i<tableLines.length;i++){
                        String lines = tableLines[i].toString().trim();//to eliminated leading and trailing spaces from both ends of the strings
                        String[] tableRows = lines.split(",:");//Split the data by including ,:
                        
                        double newRate= Double.parseDouble(jTextField_NewRate.getText());// get the newrate from the text field
                        if(currencyName.equals(tableRows[1]) ){//if Currency name is equal to the name in the text file it will write a new data in the Currency.txt file and display successful message    
                            pwp.println(tableRows[0]+",:"+tableRows[1]+",:"+tableRows[2]+",:"+String.format("%.2f",newRate));
                        }
                        else{
                            pwp.println(lines);
                        }
                    }
                    pwp.flush();//clear the stream of any element that may be or maybe not inside the stream
                    pwp.close();//flushes the characters from the stream and then closes it
                }           
             
    }   catch (FileNotFoundException ex) {
            Logger.getLogger(UpdateCurrency.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    //belows code is involving the management of the element use in the design interface (155-270)
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Currency = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton_Back = new javax.swing.JButton();
        jTextField_NewRate = new javax.swing.JFormattedTextField();
        jComboBox_CurrencyName = new javax.swing.JComboBox<>();
        jButton_Update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UPDATE CURRENCY");
        setBackground(new java.awt.Color(0, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(700, 430));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(184, 226, 138));

        jLabel1.setFont(new java.awt.Font("Sitka Banner", 3, 24)); // NOI18N
        jLabel1.setText("UPDATE CURRENCY");

        jTable_Currency.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_Currency.setEnabled(false);
        jScrollPane3.setViewportView(jTable_Currency);

        jLabel6.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        jLabel6.setText("NAME :");

        jLabel7.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        jLabel7.setText("RATE  :");

        jButton_Back.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jButton_Back.setText("BACK");
        jButton_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BackActionPerformed(evt);
            }
        });

        jComboBox_CurrencyName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jComboBox_CurrencyName.setName(""); // NOI18N
        jComboBox_CurrencyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_CurrencyNameActionPerformed(evt);
            }
        });

        jButton_Update.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jButton_Update.setText("UPDATE");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jButton_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField_NewRate, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox_CurrencyName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_CurrencyName, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_NewRate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed
       //if the field for the currency name and newrate is not empty, it allow user update currency
       if("Select".equals(jComboBox_CurrencyName.getSelectedItem())){
            JOptionPane.showMessageDialog(this, "Please Choose Valid Options!");
       }
       else{
            if(!"Select".equals(jComboBox_CurrencyName.getSelectedItem())  && !"".equals(jTextField_NewRate.getText())){
                     try{
                     updateCurrency();
                     jTable_Currency.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Symbol/unit","Rate"}));
                     ListCurrency();
                     JOptionPane.showMessageDialog(this, "The Currency Has Been Updated Successfully!");
                     jTextField_NewRate.setText(null);
                     }
                     catch(IOException e){
                         System.out.println("FIle IO exception error");
                     }
                 }
                 else{
                     JOptionPane.showMessageDialog(this, "Please Fill All The Fields!");
                 }
       }
    }//GEN-LAST:event_jButton_UpdateActionPerformed

    private void jButton_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BackActionPerformed
        // to proceed to the Home page
       AdminHomePage ahp = new AdminHomePage();
        ahp.setVisible(true);// to open the new page
        this.setVisible(false);// to close the existing page
    }//GEN-LAST:event_jButton_BackActionPerformed

    private void jComboBox_CurrencyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CurrencyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_CurrencyNameActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new UpdateCurrency().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(UpdateCurrency.class.getName()).log(Level.SEVERE, null, ex);
                }
        }});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Back;
    private javax.swing.JButton jButton_Update;
    private javax.swing.JComboBox<String> jComboBox_CurrencyName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_Currency;
    private javax.swing.JFormattedTextField jTextField_NewRate;
    // End of variables declaration//GEN-END:variables


}

