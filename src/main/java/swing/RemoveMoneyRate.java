
package swing;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import main.EditRemoveCurrency;

/**
 *
 * @author Khairul Hakimi
 */
public class RemoveMoneyRate extends javax.swing.JFrame {

    /**
     * Creates new form RemoveMoneyRate
     */
    public RemoveMoneyRate() throws IOException {
        initComponents();
        Currency();
        fillComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox_CurrencyName = new javax.swing.JComboBox<>();
        jButton_Back = new javax.swing.JButton();
        jButton_Remove = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel_CurrencyName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_CurrencyRate = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("REMOVE CURRENCY");
        setPreferredSize(new java.awt.Dimension(710, 430));

        jPanel1.setBackground(new java.awt.Color(184, 226, 138));

        jComboBox_CurrencyName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jComboBox_CurrencyName.setName(""); // NOI18N
        jComboBox_CurrencyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_CurrencyNameActionPerformed(evt);
            }
        });

        jButton_Back.setFont(new java.awt.Font("Sitka Banner", 1, 18)); // NOI18N
        jButton_Back.setText("BACK");
        jButton_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BackActionPerformed(evt);
            }
        });

        jButton_Remove.setBackground(new java.awt.Color(255, 102, 102));
        jButton_Remove.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jButton_Remove.setText("REMOVE");
        jButton_Remove.setToolTipText("");
        jButton_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RemoveActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sitka Display", 3, 24)); // NOI18N
        jLabel1.setText("REMOVE CURRENCY");

        jLabel_CurrencyName.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel_CurrencyName.setText("CURRENCY NAME:");

        jTable_CurrencyRate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_CurrencyRate.setEnabled(false);
        jTable_CurrencyRate.setShowGrid(false);
        jTable_CurrencyRate.setUpdateSelectionOnSort(false);
        jTable_CurrencyRate.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(jTable_CurrencyRate);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(143, 143, 143))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_CurrencyName)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_CurrencyName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(199, 199, 199))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_CurrencyName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_CurrencyName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void fillComboBox(){
        
        File file = new File("Currency.txt");
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                String line = lines[i].toString();
                String[] rowData = line.split(",:"); 
                jComboBox_CurrencyName.addItem(rowData[1]);
            }
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Convert.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void jButton_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RemoveActionPerformed
        // TODO add your handling code here:
        erc.setCurrency(jComboBox_CurrencyName.getSelectedItem().toString());// to set currency
        //if the Currenct Name's text field is not empty it will continue the process in the condition which will remove the currency and bring the admin to the main page or else it will display error message
        if(!"Select".equals(jComboBox_CurrencyName.getSelectedItem().toString())){
            int ans = JOptionPane.showConfirmDialog(this, "Are you sure to remove the currency?");
            if(ans == 0){
                try {
                    removeCurrency(erc);
                } catch (IOException ex) {
                    Logger.getLogger(RemoveMoneyRate.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Currency Has Been Removed Successfully!");
                // to proceed to the admin home page
                AdminHomePage admin = new AdminHomePage();
                admin.setVisible(true);//to open the new page
                this.setVisible(false);// to close the existing page
            }
            else{
                jComboBox_CurrencyName.setSelectedItem(null);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Please Select Option.");
        }

    }//GEN-LAST:event_jButton_RemoveActionPerformed

    private void jButton_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BackActionPerformed
        // to proceed to the Admin Home page
        AdminHomePage ahp = new AdminHomePage();
        ahp.setVisible(true);// to open the new page
        this.setVisible(false);// to close the existing page
    }//GEN-LAST:event_jButton_BackActionPerformed

    private void jComboBox_CurrencyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CurrencyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_CurrencyNameActionPerformed

     EditRemoveCurrency erc = new EditRemoveCurrency();//it will refer the edit remove currency class 
      public void removeCurrency(EditRemoveCurrency erc) throws IOException {
        File file = new File("Currency.txt");//Open Currency file text
        BufferedReader br;
        try{
            br = new BufferedReader(new FileReader(file));//to read the Currency file
            if(!file.exists()){//if the file is not exist it will create one
                file.createNewFile();
            }
                Object[] tableLines = br.lines().toArray();
                int i=0;
                try (BufferedWriter bwp = new BufferedWriter(new FileWriter(file)); 
                    PrintWriter pwp = new PrintWriter(bwp)) {
                    for(i=0; i<tableLines.length;i++){
                        String lines = tableLines[i].toString().trim();//gain data from the lines that has been in the file
                        String[] tableRows = lines.split(",:");//Split the data by including ,:
                      
                        if(erc.getCurrency().equals(tableRows[1]) ){
                        }
                        else{
                            pwp.println(lines);
                        }
                    }
                    pwp.flush();//clear the stream of any element that may be or maybe not inside the stream
                    pwp.close();//flushes the characters from the stream and then closes it
                } 
                catch (IOException ex) {           
                    Logger.getLogger(RemoveMoneyRate.class.getName()).log(Level.SEVERE, null, ex);
                }           
        }   
        catch (FileNotFoundException ex) {
            Logger.getLogger(RemoveMoneyRate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 
 public void Currency() throws FileNotFoundException, IOException{//display all user table
        String[] columnName = new String[4];// declare the column's name and assign size
        columnName[0] = "ID";//first column is for ID
        columnName[1] = "Name";//second column is for Name
        columnName[2] = "Symbol/unit";//third column is for symbol or unit
        columnName[3] = "Rate";//fouth column is for rate
      
        jTable_CurrencyRate.setRowHeight(30);
        File file = new File("Currency.txt");//Open Currency.txt file text
        BufferedReader br = new BufferedReader(new FileReader(file));//to read the Currency.txt file
        
        DefaultTableModel model = (DefaultTableModel) jTable_CurrencyRate.getModel();
        model.setColumnIdentifiers(columnName);
        
        Object[] tableLines = br.lines().toArray();//gain data from the lines that has been in the file
        int i;//initiate i to 0

        for(i=0; i<tableLines.length;i++){
            String line = tableLines[i].toString().trim();//to eliminated leading and trailing spaces from both ends of the strings
            String[] tableRow = line.split(",:");//Split the data by including ,:
            model.addRow(tableRow);
        }
       DefaultTableModel mdl = new DefaultTableModel();
       JTable table = new JTable(mdl);
       table.setRowHeight(50);
    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveMoneyRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveMoneyRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveMoneyRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveMoneyRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RemoveMoneyRate().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(RemoveMoneyRate.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Back;
    private javax.swing.JButton jButton_Remove;
    private javax.swing.JComboBox<String> jComboBox_CurrencyName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_CurrencyName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_CurrencyRate;
    // End of variables declaration//GEN-END:variables
}
