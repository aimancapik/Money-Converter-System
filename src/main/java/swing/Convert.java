
package swing;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Khairul Hakimi
 */
public class Convert extends javax.swing.JFrame {

    /**
     * Creates new form Convert
     */
    public Convert() throws IOException {
        initComponents();
        jTextField_CurrencyValue.setText("");
        ListCurrency();  
        fillComboBox();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void fillComboBox(){
        
        File file = new File("Currency.txt");
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                String line = lines[i].toString();
                String[] rowData = line.split(",:"); 
                jComboBox_originValue.addItem(rowData[1]);
                jComboBox_changeValue.addItem(rowData[1]);
            }
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Convert.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void ListCurrency() throws FileNotFoundException, IOException{
        String[] columnName = new String[4];// declare the column's name and assign size
        columnName[0] = "ID";//first column is for Currency ID
        columnName[1] = "Name";//second column is for Name
        columnName[2] = "Symbol/unit";//third column is for symbol or unit
        columnName[3] = "Rate";//fouth column is for rate
       
        File file = new File("Currency.txt");//Open Currency.txt file text
        BufferedReader br = new BufferedReader(new FileReader(file));//to read the Currency.txt file
        
        DefaultTableModel model = (DefaultTableModel) jTable_Currency.getModel();// to add data on the table
        model.setColumnIdentifiers(columnName);
        jTable_Currency.setRowHeight(30);
      
        Object[] tableLines = br.lines().toArray();//gain data from the lines that has been in the file
        int i;//initiate i to 0

        for(i=0; i<tableLines.length;i++){
            String line = tableLines[i].toString().trim();//to eliminated leading and trailing spaces from both ends of the strings
            String[] tableRow = line.split(",:");//Split the data by including ,:
                model.addRow(tableRow);
        }
    }
    public void calculateRate() throws IOException{
        File file = new File("Currency.txt");
        File f = new File("History.txt");
        
        double originvalue = 0;
        double changevalue = 0;
        BufferedReader br;
        double value = Double.parseDouble(jTextField_CurrencyValue.getText());
        String origin = jComboBox_originValue.getSelectedItem().toString();
        String change = jComboBox_changeValue.getSelectedItem().toString();
        String originsymbol= "";
        String changesymbol= "";

        br = new BufferedReader(new FileReader(file));
        if (!f.exists()) {
            f.createNewFile();
        }
        try ( BufferedWriter bw = new BufferedWriter(new FileWriter(f, true))) {
            PrintWriter pw = new PrintWriter(bw);

            BufferedReader brUser = new BufferedReader(new FileReader("userLogin.txt"));
            Object[] tableData = brUser.lines().toArray();
            String lineUser = tableData[0].toString().trim();
            String[] rowData = lineUser.split(",:");
            Object[] tableLines = br.lines().toArray();
            int i;

            for (i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] tableRow = line.split(",:");
                try {
                    if (origin.equals(tableRow[1])) {
                        originvalue = Double.parseDouble(tableRow[3]);
                       originsymbol= tableRow[2];
                    }
                    if (change.equals(tableRow[1])) {
                        changevalue = Double.parseDouble(tableRow[3]);
                        changesymbol=tableRow[2];
                    }

                } catch (NumberFormatException e) {
                    System.out.println("Please Enter Numeric Value!");
                }

            }

            double result = value * (changevalue / originvalue);
            if (!"".equals(result)) {
            pw.println(rowData[0] + ",:" + rowData[1] + ",:" + origin + ",:" + String.format("%.2f",value) + originsymbol + ",:" + change + ",:" + String.format("%.2f",result)+ changesymbol);
            JOptionPane.showMessageDialog(this, "Converted Successfully! The Amount Changed is: " + String.format("%.2f",result)+ " " + changesymbol);
            pw.flush();
            pw.close();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Convert.class.getName()).log(Level.SEVERE, null, ex);
        }
        } 
    //belows code is involving the management of the element use in the design interface (155-270)
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Currency = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton_Convert = new javax.swing.JButton();
        jTextField_CurrencyValue = new javax.swing.JTextField();
        jButton_Back = new javax.swing.JButton();
        jComboBox_originValue = new javax.swing.JComboBox<>();
        jComboBox_changeValue = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONVERT CURRENCY");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(184, 226, 138));

        jLabel1.setFont(new java.awt.Font("Sitka Display", 3, 24)); // NOI18N
        jLabel1.setText("CONVERT CURRENCY");

        jTable_Currency.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_Currency.setEnabled(false);
        jScrollPane3.setViewportView(jTable_Currency);

        jLabel6.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        jLabel6.setText("AMOUNT:");

        jButton_Convert.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jButton_Convert.setText("CONVERT");
        jButton_Convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConvertActionPerformed(evt);
            }
        });

        jTextField_CurrencyValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_CurrencyValueActionPerformed(evt);
            }
        });

        jButton_Back.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jButton_Back.setText("BACK");
        jButton_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BackActionPerformed(evt);
            }
        });

        jComboBox_originValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jComboBox_originValue.setName(""); // NOI18N
        jComboBox_originValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_originValueActionPerformed(evt);
            }
        });

        jComboBox_changeValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jComboBox_changeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_changeValueActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        jLabel8.setText("FROM:");

        jLabel9.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
        jLabel9.setText("TO:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jButton_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jButton_Convert, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(145, 145, 145)
                            .addComponent(jComboBox_originValue, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(154, 154, 154)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(40, 40, 40)
                                            .addComponent(jTextField_CurrencyValue, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jComboBox_changeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField_CurrencyValue, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox_originValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_changeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Convert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConvertActionPerformed
       //if the text field for the menu name and quantity is not empty, it allow user to purchase the Lauk and then it will update back the new table and empty back both text fields
       if(("Select".equals(jComboBox_originValue.getSelectedItem())) || ("Select".equals(jComboBox_changeValue.getSelectedItem()))){
            JOptionPane.showMessageDialog(this, "Please Choose Valid Options!");
       }
       else{
           if(!"".equals(jTextField_CurrencyValue.getText())){
                     try{
                     calculateRate();
                     jTable_Currency.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Rate"}));
                     ListCurrency();
                     jTextField_CurrencyValue.setText(null);
                     }
                     catch(IOException e){
                         System.out.println("FIle IO exception error");
                     }
                 }
                 else{
                     JOptionPane.showMessageDialog(this, "Please Fill All The Fields!");
                 }
       }          
    }//GEN-LAST:event_jButton_ConvertActionPerformed

    private void jButton_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BackActionPerformed
        // to proceed to the Home page
       CustomerHomePage chp = new CustomerHomePage();
        chp.setVisible(true);// to open the new page
        this.setVisible(false);// to close the existing page*/
    }//GEN-LAST:event_jButton_BackActionPerformed

    private void jComboBox_originValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_originValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_originValueActionPerformed

    private void jTextField_CurrencyValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_CurrencyValueActionPerformed
        // element use in the GUI's design
    }//GEN-LAST:event_jTextField_CurrencyValueActionPerformed

    private void jComboBox_changeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_changeValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_changeValueActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Convert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Convert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Convert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Convert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Convert().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Convert.class.getName()).log(Level.SEVERE, null, ex);
                }
        }});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Back;
    private javax.swing.JButton jButton_Convert;
    private javax.swing.JComboBox<String> jComboBox_changeValue;
    private javax.swing.JComboBox<String> jComboBox_originValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_Currency;
    private javax.swing.JTextField jTextField_CurrencyValue;
    // End of variables declaration//GEN-END:variables


}

